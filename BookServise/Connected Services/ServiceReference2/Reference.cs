//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookServise.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IAccount")]
    public interface IAccount {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/Login", ReplyAction="http://tempuri.org/IAccount/LoginResponse")]
        WcfServiceBooks.DAL.User Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/Login", ReplyAction="http://tempuri.org/IAccount/LoginResponse")]
        System.Threading.Tasks.Task<WcfServiceBooks.DAL.User> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/Register", ReplyAction="http://tempuri.org/IAccount/RegisterResponse")]
        bool Register(WcfServiceBooks.DAL.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/Register", ReplyAction="http://tempuri.org/IAccount/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(WcfServiceBooks.DAL.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/GetImage", ReplyAction="http://tempuri.org/IAccount/GetImageResponse")]
        byte[] GetImage(string imageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/GetImage", ReplyAction="http://tempuri.org/IAccount/GetImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetImageAsync(string imageName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountChannel : BookServise.ServiceReference2.IAccount, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountClient : System.ServiceModel.ClientBase<BookServise.ServiceReference2.IAccount>, BookServise.ServiceReference2.IAccount {
        
        public AccountClient() {
        }
        
        public AccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfServiceBooks.DAL.User Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<WcfServiceBooks.DAL.User> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public bool Register(WcfServiceBooks.DAL.User user) {
            return base.Channel.Register(user);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(WcfServiceBooks.DAL.User user) {
            return base.Channel.RegisterAsync(user);
        }
        
        public byte[] GetImage(string imageName) {
            return base.Channel.GetImage(imageName);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetImageAsync(string imageName) {
            return base.Channel.GetImageAsync(imageName);
        }
    }
}
